version: '3.7'

volumes:
  pg_vol_auth:
  prometheus_data:
  grafana_data:

networks:
  auth-network:
    driver: bridge

services:
  pg-auth:
    image: postgres:16-alpine
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${PG_USER}
      - POSTGRES_PASSWORD=${PG_PASSWORD}
      - POSTGRES_DB=${PG_DATABASE_NAME}
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - pg_vol_auth:/var/lib/postgresql/data
    networks:
      - auth-network

  auth:
    container_name: auth
    build:
      context: .
      dockerfile: Dockerfile
    command: [ "./entrypoint.sh" ]
    volumes:
      - ${BASE_DIR}.env:/root/.env
    depends_on:
      - pg-auth
    networks:
      - auth-network
    ports:
      - "${GRPC_PORT_EXTERNAL}:${GRPC_PORT}"
      - "${HTTP_PORT_EXTERNAL}:${HTTP_PORT}"
      - "${SWAGGER_PORT_EXTERNAL}:${SWAGGER_PORT}"

  prometheus:
    image: prom/prometheus:v2.37.9
    ports:
      - "${PROMETHEUS_PORT}:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./alerts.yml:/etc/prometheus/alerts.yml
      - ./.target_exporter.yml:/etc/prometheus/sd_files/.target_exporter.yml
      - prometheus_data:/prometheus
    networks:
      - auth-network  # сеть внутреняя, потому не доступно http://auth:2112/metrics для поиска кастомных метрик,
# их названия брать из локального запуска. Как вариант сделать обратное прокси через nginx, тогда просмотр возможен
#    network_mode: host # прометеус будет слушать localhost, поиск кастомных метрик доступен

  grafana:
    image: grafana/grafana-oss:10.0.3
    ports:
      - "${GRAFANA_PORT}:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - auth-network