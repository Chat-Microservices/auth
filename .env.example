PG_DATABASE_NAME= - название БД
PG_USER= - пользователь БД
PG_PASSWORD= - пароль к БД
PG_PORT= - внешний порт БД
MIGRATION_DIR=./migrations - папка с миграциями
MIGRATION_DSN="host=<хост бд(навание контейнера БД)> port=5432 dbname=${PG_DATABASE_NAME} user=${PG_USER} password=${PG_PASSWORD} sslmode=disable"

GRPC_PORT= - внутренний порт grpc сервера, передается в конфиг
GRPC_PORT_EXTERNAL= - внешний порт grpc сервера куда стрелять

HTTP_PORT= - внутренний порт http сервера, передается в конфиг
HTTP_PORT_EXTERNAL= - внешний порт http сервера куда стрелять

SWAGGER_PORT= - внутренний порт http сервера свагера, передается в конфиг
SWAGGER_PORT_EXTERNAL= - внешний порт http сервера свагера куда ходить за докой

# Настройки деплоя/запуск контейнеров БД c контейнером сервиса авторизации
# указываем порт БД 5432 т.к. сервис подключается контейнером к внутреннему порту БД
PG_DSN="host=<хост бд(навание контейнера БД)> port=5432 dbname=${PG_DATABASE_NAME} user=${PG_USER} password=${PG_PASSWORD} sslmode=disable"
GRPC_HOST=0.0.0.0 - используем все ip сервера(!!! а так же для локального докера)
HTTP_HOST=0.0.0.0
SWAGGER_HOST=0.0.0.0
BASE_DIR="/root/auth/" - директория для деплоя, где auth папка куда копируем все фалы на сервере. Важно!!! для деплоя используется именно эта BASE_DIR

# Локальные настройки под дебаг/контейнер сервиса авторизации не запускаем, только БД
# Указываем внешний порт БД PG_PORT=<...>, т.к. обращаемся к локалхосту, который работает по внешнему порту с сервисами вне докера
PG_DSN="host=localhost port=${PG_PORT} dbname=${PG_DATABASE_NAME} user=${PG_USER} password=${PG_PASSWORD} sslmode=disable"
GRPC_HOST=localhost - хост при дебаге и запуске сервиса через go build
HTTP_HOST=localhost
SWAGGER_HOST=localhost
BASE_DIR= - указать полный путь до файла энв на локальной машине. Важно!!! для использования локально в докере указывает именно ее, а не ту что для деплоя

# Эти данные указываем в настроках ci/cd
REGESTRY=<current regestry for img>
USERNAME=<user for regestry>
PASSWORD=<password for regestry>